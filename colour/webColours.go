package colour

import (
	"fmt"
	"image/color"
)

var (
	webColours = map[string]color.RGBA{
		"white":   {0xFF, 0xFF, 0xFF, 0xFF},
		"silver":  {0xC0, 0xC0, 0xC0, 0xFF},
		"gray":    {0x80, 0x80, 0x80, 0xFF},
		"grey":    {0x80, 0x80, 0x80, 0xFF},
		"black":   {0x00, 0x00, 0x00, 0xFF},
		"red":     {0xFF, 0x00, 0x00, 0xFF},
		"maroon":  {0x80, 0x00, 0x00, 0xFF},
		"yellow":  {0xFF, 0xFF, 0x00, 0xFF},
		"olive":   {0x80, 0x80, 0x00, 0xFF},
		"lime":    {0x00, 0xFF, 0x00, 0xFF},
		"green":   {0x00, 0x80, 0x00, 0xFF},
		"aqua":    {0x00, 0xFF, 0xFF, 0xFF},
		"teal":    {0x00, 0x80, 0x80, 0xFF},
		"blue":    {0x00, 0x00, 0xFF, 0xFF},
		"navy":    {0x00, 0x00, 0x80, 0xFF},
		"fuchsia": {0xFF, 0x00, 0xFF, 0xFF},
		"purple":  {0x80, 0x00, 0x80, 0xFF},
	}

	cgaColours = map[string]color.RGBA{
		"white":        {0xFF, 0xFF, 0xFF, 0xFF},
		"light gray":   {0xC0, 0xC0, 0xC0, 0xFF},
		"light grey":   {0xC0, 0xC0, 0xC0, 0xFF},
		"dark gray":    {0x80, 0x80, 0x80, 0xFF},
		"dark grey":    {0x80, 0x80, 0x80, 0xFF},
		"black":        {0x00, 0x00, 0x00, 0xFF},
		"high red":     {0xFF, 0x00, 0x00, 0xFF},
		"low red":      {0x80, 0x00, 0x00, 0xFF},
		"yellow":       {0xFF, 0xFF, 0x00, 0xFF},
		"brown":        {0x80, 0x80, 0x00, 0xFF},
		"high green":   {0x00, 0xFF, 0x00, 0xFF},
		"green":        {0x00, 0xFF, 0x00, 0xFF},
		"low green":    {0x00, 0x80, 0x00, 0xFF},
		"high cyan":    {0x00, 0xFF, 0xFF, 0xFF},
		"cyan":         {0x00, 0xFF, 0xFF, 0xFF},
		"low cyan":     {0x00, 0x80, 0x80, 0xFF},
		"high blue":    {0x00, 0x00, 0xFF, 0xFF},
		"low blue":     {0x00, 0x00, 0x80, 0xFF},
		"high magenta": {0xFF, 0x00, 0xFF, 0xFF},
		"magenta":      {0xFF, 0x00, 0xFF, 0xFF},
		"low magenta":  {0x80, 0x00, 0x80, 0xFF},
	}

	cgaColoursByNum = map[int]color.RGBA{
		15: {0xFF, 0xFF, 0xFF, 0xFF},
		7:  {0xC0, 0xC0, 0xC0, 0xFF},
		8:  {0x80, 0x80, 0x80, 0xFF},
		0:  {0x00, 0x00, 0x00, 0xFF},
		12: {0xFF, 0x00, 0x00, 0xFF},
		4:  {0x80, 0x00, 0x00, 0xFF},
		14: {0xFF, 0xFF, 0x00, 0xFF},
		6:  {0x80, 0x80, 0x00, 0xFF},
		10: {0x00, 0xFF, 0x00, 0xFF},
		2:  {0x00, 0x80, 0x00, 0xFF},
		11: {0x00, 0xFF, 0xFF, 0xFF},
		3:  {0x00, 0x80, 0x80, 0xFF},
		9:  {0x00, 0x00, 0xFF, 0xFF},
		1:  {0x00, 0x00, 0x80, 0xFF},
		13: {0xFF, 0x00, 0xFF, 0xFF},
		5:  {0x80, 0x00, 0x80, 0xFF},
	}
)

// CGAColour returns the CGA colour corresponding to the given int. If the
// colour is not found then a non-nil error is returned.
func CGAColour(i int) (color.RGBA, error) {
	if c, ok := cgaColoursByNum[i]; ok {
		return c, nil
	}

	return color.RGBA{}, fmt.Errorf("bad CGA colour index: %d", i)
}
